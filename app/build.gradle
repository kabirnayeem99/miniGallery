plugins {
    id 'kotlin-android'
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
    id 'com.google.devtools.ksp' version '1.6.21-1.0.6'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "io.github.kabirnayeem99.minigallery"
        minSdk 30
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    // required for generated code by compose-destination library
    applicationVariants.all { variant ->
        kotlin.sourceSets {
            getByName(variant.name) {
                kotlin.srcDir("build/generated/ksp/${variant.name}/kotlin")
            }
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1'
    implementation 'androidx.activity:activity-compose:1.4.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.foundation:foundation:$compose_version"
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"


    // Jetpack Compose - for UI building
    implementation 'androidx.activity:activity-compose:1.4.0'
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.animation:animation:$compose_version"
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.4.1'
    def material_3_version = "1.0.0-alpha13"
    implementation "androidx.compose.material3:material3:$material_3_version"
    implementation "androidx.compose.material3:material3-window-size-class:$material_3_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation 'com.google.accompanist:accompanist-systemuicontroller:0.24.11-rc'
    implementation "com.google.accompanist:accompanist-pager:0.24.11-rc"

    // Navigation
    def nav_version = "2.4.2"
    implementation "androidx.navigation:navigation-compose:$nav_version"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    // Compose Destinations - for better and simpler navigation
    implementation 'io.github.raamcosta.compose-destinations:animations-core:1.5.12-beta'
    ksp 'io.github.raamcosta.compose-destinations:ksp:1.5.12-beta'

    // Coroutines - for threading
    def coroutines_version = '1.6.3'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // Timber - for better and more secure, hassle-free logging
    implementation 'com.jakewharton.timber:timber:5.0.1'

    // Hilt - for dependency injection
    def hilt_dagger_version = '2.42'
    implementation "com.google.dagger:hilt-android:$hilt_dagger_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_dagger_version"


    // Work Manager - for background syncing
    def work_manager_version = "2.7.1"
    implementation "androidx.work:work-runtime-ktx:$work_manager_version"
    implementation 'androidx.hilt:hilt-work:1.0.0'
    kapt 'androidx.hilt:hilt-compiler:1.0.0'

    // Faker - for faking data
    implementation 'io.github.serpro69:kotlin-faker:1.11.0'

    // EasyPermission - for handling permission
    implementation 'pub.devrel:easypermissions:3.0.0'

    // Glide - for image loading
    implementation "com.github.skydoves:landscapist-glide:1.5.2"

    // LazyStaggeredGrid - to show staggered view in jetpack compose
    implementation 'com.github.nesyou01:LazyStaggeredGrid:1.2.0'

    // Room - for caching
    def room_version = "2.4.2"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // GSON - for JSON handling
    implementation 'com.google.code.gson:gson:2.9.0'


}

// to suppress opt-in feature warning
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs += "-Xopt-in=io.ktor.util.KtorExperimentalAPI"
        kotlinOptions.freeCompilerArgs += ["-Xuse-experimental=io.ktor.locations.KtorExperimentalLocationsAPI"]
    }
}